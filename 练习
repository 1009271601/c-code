int main()
{
	char arr1[] = { "wellcom to bit!!!!" };//里面的空格也有下标。
	char arr2[] = { "##################" };//每个字符串后面都有一个隐藏的/0，并且它也有下标。
	int left = 0;
	int right = sizeof(arr1) / sizeof(arr1[0]) - 2;//这里-2而非-1是因为字符串后面有一个隐藏的/0.
	//int right = strlen(arr1) - 1;//strlen用于求字符串的长度（不包含/0）

	while (left <= right)
	{
		
		arr2[left] = arr1[left];
		left++;
		arr2[right] = arr1[right];
		right--;
		Sleep(1000);
		//休息一秒
		system("cls");//执行系统命令的一个函数，csl--清空屏幕。
		printf("%s\n", arr2);
	}
	return 0;
}

int main()
{
	printf("请输入密码\n");
	char arr[20] = {""};
	int a = 0;
	for (a = 1; a <= 3; a++)
	{

		scanf("%s", arr);
		if (strcmp(arr, "lu123456") == 0)//==不能用来判断两个字符串是否相等，需要用库函数--strcmp
		{
			printf("密码正确\n");
			break;
		}
		else if (arr != "lu123456")
		{
			printf("密码错误,请重新输入\n");
		}

	}


	return 0;
}

求100-200之间的素数（只能被1整除）
int main()
{
	int a = 0;
	int count = 0;
	int c = 0;
	for (a = 100; a <= 200; a++)
	{
		int b = 0;
		for(b = 2;b<=a;b++)
			if (a % b == 0)
			{
				break;
			}
		if (a == b)
		{
			printf("%d\n", a);
			count++;
		}
	}
	printf("%d\n", count);
	return 0;
}

打印3的倍数的所有数字
int main()
{
	int a = 0;
	int c = 0;
	scanf("%d", &c);
	for (a = 3; a <= c; a+=3)
	{
		int b = 0;
		for (b = 1; a >= b; b++)
		{
			if (a / b == 3)
			{
				printf("%d\n", a);
				break;
			}
			
		}
		
	}
	return 0;
}

int main()
{
	int a = 4;
	int b = 234;
	int c = 34235;
	scanf("%d%d%d", &a, &b, &c);
	while (a < b || a < c || b < c)
	{
		if (a < b)
		{
			int d = a;
			a = b;
			b = d;
		}
		else if (b < c)
		{
			int f = b;
			b = c;
			c = f;
		}

	}
	printf("%d,%d,%d", a, b, c);
	return 0;
}

求最大公约数

int main()
{
	int a = 0;
	int b = 0;
	int c = 0;
	scanf("%d%d", &a, &b);
	while (a % b)//这里能够直接跳出循环是因为当表达式为0时，结果为假，假则不继续运行代码。所以能够跳出循环。而最大公约数不能有余数，也就是c等于非零
	{
		c = a % b;
		a = b;
		b = c;
	}
	printf("%d\n", b);
	return 0;
}
